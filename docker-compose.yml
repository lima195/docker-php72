version: '3.1'
services:
  nginx:
    container_name: docker-app_nginx
    image: nginx:latest
    #restart: always
    volumes:
     - ./nginx_conf/default.conf:/etc/nginx/conf.d/default.conf
     - ../web:/usr/share/nginx/www
    working_dir: /usr/share/nginx/www
    ports:
      - 80:80
      - 443:443
    expose:
      - 443
    links:
      - db
      - php:docker-app_php
    depends_on:
      - php
    networks:
      app_net:
        ipv4_address: 172.22.0.102

  php:
    container_name: docker-app_php
    build:
      context: .
      dockerfile: ./php72/Dockerfile
    #restart: always
    volumes:
     - ../web:/usr/share/nginx/www
    working_dir: /usr/share/nginx/www
    ports:
      - 9000:9000
    networks:
      app_net:
        ipv4_address: 172.22.0.104

  db:
    container_name: docker-app_mysql
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - ./volumes/mysql/volume:/var/lib/mysql
    #restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: app
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: root
    ports:
      - 3306:3306
    networks:
      app_net:
        ipv4_address: 172.22.0.108

  adminer:
    container_name: docker-app_adminer
    image: adminer
    #restart: always
    ports:
      - 8222:8080
    networks:
      app_net:
        ipv4_address: 172.22.0.112
    links:
      - db

  assets:
    container_name: docker-app_assets
    #restart: always
    build:
      context: .
      dockerfile: ./assets/Dockerfile
    volumes:
     - ../web:/usr/share/nginx/www
    working_dir: /usr/share/nginx/www
    ports:
      - 9019:9019
    tty: true
    networks:
      app_net:
        ipv4_address: 172.22.0.114

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: 172.22.0.0/16